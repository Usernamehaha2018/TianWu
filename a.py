from re import M
import xml.etree.ElementTree as ET
import matplotlib.pyplot as plt
import numpy as np
from xml.dom import minidom
import seaborn as sns
import pandas as pdq
from matplotlib.lines import Line2D
import matplotlib.colors as mcolors
# import mpl_scatter_density

from matplotlib.pyplot import MultipleLocator
import matplotlib

# modes = ["clove","ecmp" ]
modes = [ "letflow","ecmp", "drill", "clove" ]
bottoms_20 = {}
tops_20 = {}
mid_20 = {}
mid_40 = {}
mid_60 = {}
p99 = {}
# loads = [0.3,0.4,0.5,0.6,0.7, 0.8]
loads = [0.05]
workloads = ["ml", "datamining"]
fcts = {}


def read_xml(xml_file, mode):
    tree = minidom.parse(xml_file)
    objs = tree.getElementsByTagName('Flow')
    for _, obj in enumerate(objs):
        t1 = obj.getAttribute('timeFirstTxPacket')
        t2 = obj.getAttribute('timeLastTxPacket')
        b = obj.getAttribute('txBytes')
        if t1 and t2 and b:
            
            if int(b) >= 99999999*2:
                fcts[mode].append(int(t2[1:-4]) - int(t1[1:-4]))
                # print(b, int(t2[1:-4]) - int(t1[1:-4]))
            
if __name__ == '__main__':
    for mode in modes:
        print(mode, ":")
        
        for seed in ["7"]:
            for load in loads:
                if mode+str(load) not in bottoms_20.keys():
                    bottoms_20[mode+str(load)] = []
                    tops_20[mode+str(load)] = []
                    p99[mode+str(load)] = []
                    mid_20[mode+str(load)] = []
                    mid_40[mode+str(load)] = []
                    mid_60[mode+str(load)] = []
                
                fcts[mode] = []
                read_xml("datamining-1-large-load-4X4-"+str(load)+"-DcTcp-"+mode+"-simulation-"+seed+"-b600.xml", mode) 
                fcts[mode].sort()
                print(sum(fcts[mode])/len(fcts[mode]))
                print(fcts[mode][int(0.999*len(fcts[mode]))])
                # print(fcts[mode][-1])
                # print(fcts[mode][-10:])
                # p99[mode+str(load)].append(fcts[mode][int(0.999*len(fcts[mode]))])
                # bottom_20 = int(0.2*len(fcts[mode]))
                # bottoms_20[mode+str(load)].append(sum(fcts[mode][-bottom_20:])/bottom_20)
                # tops_20[mode+str(load)].append(sum(fcts[mode][:bottom_20])/bottom_20)
                # mid_20[mode+str(load)].append(sum(fcts[mode][bottom_20:2*bottom_20])/bottom_20)
                # mid_40[mode+str(load)].append(sum(fcts[mode][2*bottom_20:3*bottom_20])/bottom_20)
                # mid_60[mode+str(load)].append(sum(fcts[mode][3*bottom_20:4*bottom_20])/bottom_20)
    # print(tops_20,"\n",mid_20,"\n",mid_40,"\n",mid_60,"\n",bottoms_20,"\n", p99)


# {'drill0.8': [82859.31504702194, 82827.12933753943, 83394.86798679868, 83269.11589403973], 'letflow0.7': [83327.49100719424, 83323.1909090909, 103317.79056603773, 88394.0468164794], 'drill0.7': [82826.02877697842, 82705.22363636363, 83476.24150943397, 83136.53370786516], 'clove0.8': [83933.62382445141, 88089.1545741325, 101057.05610561057, 101309.35761589404], 'clove0.7': [84491.14028776978, 85592.9909090909, 97148.15849056604, 87195.35393258427], 'letflow0.8': [84818.0407523511, 92878.95899053628, 99108.399339934, 97222.65894039735], 'ecmp0.8': [84904.38087774295, 88785.51577287067, 93471.33333333333, 97788.36092715232], 'ecmp0.7': [88406.2535971223, 85444.96545454545, 97904.33018867925, 88932.22659176029]} 
#  {'drill0.8': [125159.93573667711, 118863.90063091482, 117147.31188118811, 112697.3261589404], 'letflow0.7': [150980.51438848922, 152529.62181818183, 166741.85471698112, 160842.50374531836], 'drill0.7': [125386.44244604316, 126348.01090909091, 121379.27735849057, 127143.56554307116], 'clove0.8': [155526.7868338558, 160028.3217665615, 164672.57590759077, 164975.8642384106], 'clove0.7': [154632.0665467626, 158817.43818181817, 164349.93018867925, 160123.43258426967], 'letflow0.8': [156003.88714733542, 162158.7334384858, 163884.43894389438, 163719.18543046358], 'ecmp0.8': [155113.24137931035, 161079.05835962144, 163224.22607260727, 164035.23178807946], 'ecmp0.7': [160789.03057553957, 158392.20363636364, 164831.60188679246, 161044.19288389513]} 
#  {'drill0.8': [166898.5909090909, 166788.83753943216, 168091.3316831683, 167826.21523178808], 'letflow0.7': [185991.03956834532, 182533.49272727274, 250738.72075471698, 210734.4288389513], 'drill0.7': [167265.58633093524, 166794.09636363637, 169093.57735849055, 169436.8052434457], 'clove0.8': [191001.1473354232, 204564.49369085173, 240966.37788778878, 243975.36920529802], 'clove0.7': [191699.35071942446, 193702.4309090909, 236709.7396226415, 207119.33146067415], 'letflow0.8': [194991.38087774295, 216935.58517350157, 231614.39273927393, 233850.09933774834], 'ecmp0.8': [192708.12068965516, 207822.37697160884, 222302.07590759077, 239995.50993377483], 'ecmp0.7': [207885.37050359714, 191578.96727272728, 239906.66603773585, 211379.4456928839]} 
#  {'drill0.8': [265765.275862069, 256776.7334384858, 241499.49669966998, 241945.18874172185], 'letflow0.7': [349713.63669064746, 334005.92727272725, 408436.5245283019, 387198.90636704117], 'drill0.7': [271316.5251798561, 263620.56363636366, 261121.8641509434, 298848.543071161], 'clove0.8': [350634.55956112855, 364015.903785489, 390958.38613861386, 404703.2417218543], 'clove0.7': [345769.2679856115, 345260.24727272725, 399869.06603773584, 382417.84269662923], 'letflow0.8': [352160.0031347962, 372105.54889589903, 378298.04620462045, 399108.07450331125], 'ecmp0.8': [343895.5799373041, 369787.32807570975, 381412.14686468645, 409779.34271523176], 'ecmp0.7': [366975.7823741007, 343097.38727272727, 406987.7886792453, 384947.8501872659]} 
#  {'drill0.8': [30504904.628526647, 52398570.57570978, 80888800.90924093, 54237396.5910596], 'letflow0.7': [41842401.669064745, 45263771.06545454, 54078991.15849057, 33596583.61985019], 'drill0.7': [34215796.84352518, 44921514.11454546, 66980991.63018868, 32784314.5], 'clove0.8': [32704000.180250783, 48488117.70820189, 65349847.32673267, 49454189.529801324], 'clove0.7': [38466579.097122304, 41532889.805454545, 59349203.24150944, 34966880.27340824], 'letflow0.8': [32468391.305642635, 48762451.06940063, 71058760.54620463, 46712180.75165563], 'ecmp0.8': [33966569.73197492, 52878024.829652995, 66078399.83993399, 48509022.533112586], 'ecmp0.7': [36343328.496402875, 43650515.165454544, 57277576.48679245, 35343738.96441948]} 
#  {'drill0.8': [1234497874, 1917571022, 1823166901, 1445030605], 'letflow0.7': [1281748808, 1280520742, 1417843103, 920253178], 'drill0.7': [947281157, 1152140156, 1473284907, 838548766], 'clove0.8': [1261597906, 1927632607, 1593352047, 1828723288], 'clove0.7': [1414102592, 1121269366, 1568374052, 1549858784], 'letflow0.8': [1101338614, 2060925411, 1679484626, 1482651229], 'ecmp0.8': [1402575048, 1897888376, 1575088899, 1055630913], 'ecmp0.7': [997483232, 1115998722, 1092937969, 791640696]} 
# {'letflow0.5': [85064.68203883494, 83027.6313253012, 83466.28296703297, 83109.7912371134], 'drill0.6': [82773.68674698795, 83166.12606837606, 82948.06873614191, 82641.92190889371], 'letflow0.6': [83546.2951807229, 94216.93589743589, 90533.11529933481, 83134.9240780911], 'ecmp0.5': [89392.56310679612, 83387.21927710844, 83513.90934065935, 82941.22422680413], 'clove0.5': [87559.25, 83137.39518072289, 84707.05769230769, 83095.13917525773], 'drill0.5': [82749.35679611651, 82812.72048192771, 82490.8021978022, 82535.73711340207], 'ecmp0.6': [84163.49799196787, 88073.43803418803, 89574.9800443459, 83330.15618221258], 'clove0.6': [83225.47991967872, 88562.7329059829, 87886.88026607539, 83368.66377440347]} 
#  {'letflow0.5': [156211.57524271845, 149245.86024096387, 154675.3901098901, 148524.53865979382], 'drill0.6': [128772.00602409638, 131805.86752136753, 121462.31929046563, 125792.6334056399], 'letflow0.6': [153043.8092369478, 162831.87393162394, 161300.37694013305, 148147.59002169198], 'ecmp0.5': [159866.63349514562, 152268.9734939759, 155540.24725274724, 144373.9974226804], 'clove0.5': [161648.89805825244, 148064.83614457832, 158223.07967032967, 150551.65206185568], 'drill0.5': [130292.37621359223, 132093.53012048194, 129934.36538461539, 126606.50515463918], 'ecmp0.6': [156714.13654618475, 161051.9294871795, 162074.83592017737, 150600.48156182212], 'clove0.6': [146621.11044176706, 161094.16025641025, 160605.47450110863, 150232.27114967463]} 
#  {'letflow0.5': [190623.73058252427, 179083.89638554218, 191019.41483516485, 179566.15979381444], 'drill0.6': [167299.86144578314, 171368.07478632478, 167394.67405764968, 166812.4403470716], 'letflow0.6': [188329.97389558234, 216705.72222222222, 213750.53436807095, 179265.83297180044], 'ecmp0.5': [206585.53883495147, 181881.12530120483, 189938.8901098901, 172919.67268041236], 'clove0.5': [206743.3713592233, 178121.10361445782, 196499.78296703298, 177928.12628865978], 'drill0.5': [168471.3932038835, 167604.3686746988, 167744.09065934067, 165897.80412371134], 'ecmp0.6': [190767.3534136546, 202167.48076923078, 213971.17073170733, 180890.62039045553], 'clove0.6': [176101.9096385542, 204129.5235042735, 206215.70953436807, 180585.65075921908]} 
#  {'letflow0.5': [334738.9053398058, 327852.8120481928, 363518.32692307694, 326442.1701030928], 'drill0.6': [279199.9959839357, 282985.64743589744, 261222.67627494456, 282348.75488069415], 'letflow0.6': [345028.062248996, 363727.7670940171, 368588.52549889137, 339241.01735357917], 'ecmp0.5': [352223.07524271845, 328056.3927710843, 353172.3461538461, 319168.7731958763], 'clove0.5': [369828.8640776699, 327996.421686747, 368109.782967033, 320847.4149484536], 'drill0.5': [278477.1383495146, 284416.1445783133, 292720.98626373627, 262252.2706185567], 'ecmp0.6': [345670.7851405622, 354613.9166666667, 378186.70509977825, 339805.19739696314], 'clove0.6': [323166.8574297189, 353953.13675213675, 371086.889135255, 342019.55531453365]} 
#  {'letflow0.5': [34133417.33252427, 35522136.36626506, 60629327.81593407, 28517224.5], 'drill0.6': [41157477.767068274, 55545956.985042736, 49790088.21286031, 29128653.82429501], 'letflow0.6': [37346611.06827309, 46589006.352564104, 46428997.8713969, 39732151.89804772], 'ecmp0.5': [34044739.27912621, 32786160.645783134, 62673676.79395604, 32466158.57731959], 'clove0.5': [36182350.98058253, 35431357.79759036, 64611651.76098901, 34240341.182989694], 'drill0.5': [37947017.16019417, 38239936.77831325, 75231150.20879121, 27069254.06958763], 'ecmp0.6': [36468970.17068273, 44157825.807692304, 42450045.554323725, 31039849.04121475], 'clove0.6': [39018510.62048193, 49431223.18589743, 44128658.9135255, 38293392.25379609]} 
#  {'letflow0.5': [831588944, 937663883, 1028122334, 988365051], 'drill0.6': [1282181684, 1456066963, 1015513272, 441482299], 'letflow0.6': [1166867262, 1313636354, 1431294028, 1323565590], 'ecmp0.5': [821422261, 855409818, 1559941293, 885525270], 'clove0.5': [835815455, 1103776622, 1472853169, 1263183169], 'drill0.5': [835399231, 1186513645, 1518793271, 875919542], 'ecmp0.6': [886709268, 1112266497, 957780480, 712392454], 'clove0.6': [1283271797, 1133338756, 1249831694, 1414593175]}
    x = [30,40,50,60,70,80]
    x_major_locator=MultipleLocator(4)
    # print(y3)
    sns.set_style("whitegrid")
    matplotlib.rcParams.update({'font.size': 20, "font.weight": "bold"}) 
    plt.xticks(None, weight='bold')
    plt.xlim((40, 80))
    
    my_x_ticks = np.arange(40, 81, 10)
    # my_y_ticks = np.arange(-2, 2, 0.3)
    # plt.xticks(my_x_ticks,weight='bold')
    
    # my_y_ticks = np.arange(10000000, 40000000, 10000000)
    # plt.yticks(my_y_ticks)
    shapes = ["ro-", "g*-", "k^-", "ys-", "bp-"]
    for i, mode in enumerate(modes):
        plt.plot(x, tops_20[mode], shapes[i], label=mode, linewidth=2.5, markersize=8)
        
    # plt.plot(x, y99, 'ro-', label='ECMP', linewidth=2.5, markersize=8)
    # plt.plot(x, y991, 'g*-', label='LetFlow', linewidth=2.5, markersize=8)
    # plt.plot(x, y992, 'b^-', label='DRILL', linewidth=2.5, markersize=8)
    # plt.plot(x, y993, 'ys-', label='LFB', linewidth=2.5, markersize=8)
    
    # plt.plot(x, y50, 'ro-', label='ECMP', linewidth=2.5, markersize=8)
    # plt.plot(x, y501, 'g*-', label='LetFlow', linewidth=2.5, markersize=8)
    # plt.plot(x, y502, 'b^-', label='DRILL', linewidth=2.5, markersize=8)
    # plt.plot(x, y503, 'ys-', label='LFB', linewidth=2.5, markersize=8)
    # fig = plt.figure()
    # ax = fig.add_subplot(1, 1, 1, projection='scatter_density')
    
    # norm = mcolors.TwoSlopeNorm(vcenter=0)   
    # density = ax.scatter_density(xe, ecmp,norm=norm, cmap=plt.cm.RdBu)
    # ax.set_xlim(min(xe), max(xe))
    # ax.set_ylim(min(ecmp), max(ecmp))
    # fig.colorbar(density, label='Number of points per pixel')
    # fig.savefig('gaussian_color_coded.png')
    
    # plt.hist((np.array(xe), np.array(ecmp)))
    

    # plt.xlabel('link offered load %', weight="bold")
    # plt.ylabel('FCT(ns)', weight="bold")
    plt.legend(loc='upper left' )
    plt.tight_layout()
    # plt.tight_layout()
    # plt.show()
    plt.savefig("fc2.png")
    
#     mywang@tian-609-11:~/TianWu$ python3 a.py 
# letflow :
# 16366204.060495535
# 3312744584
# 1612758142
# ecmp :
# 16546095.770280467
# 3140461259
# drill :
# 19111474.617972583
# 3384930689
# clove :
# 15020501.284398189
# 2726312917
